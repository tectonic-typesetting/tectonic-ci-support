# Copyright 2019 the Tectonic Project
# Licensed under the MIT License.

# Triggered when the mater branch is updated with commits that modify files
# the "tool" subdirectory. Builds the helper tool on supported plaforms and
# uploads the executables as release artifacts.

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - tool/

pr: none

variables:
- template: variables.yml

jobs:
- job: build_and_deploy_tool
  strategy:
    matrix:
      linux-stable:
        imageName: ${{ variables.linux_image }}
        platform: x86_64-unknown-linux-gnu
        toolchain: stable
      macos-stable:
        imageName: ${{ variables.macos_image }}
        platform: x86_64-apple-darwin
        toolchain: stable
      windows-stable:
        imageName: ${{ variables.windows_image }}
        platform: x86_64-pc-windows-msvc
        toolchain: stable

  pool:
    vmImage: $(imageName)

  steps:

  # Build as in the CI pipeline ...
  - template: build-tool-steps.yml
    parameters:
      rustup_toolchain: $(toolchain)

  # .. but also deploy the tool using itself
  - script: |
      set -xeuo pipefail
      cd tool/target/release
      tarname="ttcitool-latest-${PLATFORM}.tar.gz"
      tar czf "${tarname}" ttcitool
      ./ttcitool upload-gh-artifact --overwrite --tag=production "${tarname}"
    displayName: Upload tool to GitHub (non-Windows)
    condition: ne(variables['Agent.OS'], 'Windows_NT')
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
      PLATFORM: $(platform)

  - script: |
      cd tool\target\release
      copy ttcitool.exe ttcitool-latest-%PLATFORM%.exe
      .\ttcitool.exe upload-gh-artifact --overwrite --tag=production ttcitool-latest-%PLATFORM%.exe
    displayName: Upload tool to GitHub (Windows)
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    env:
      GITHUB_TOKEN: $(GITHUB_TOKEN)
      PLATFORM: $(platform)
