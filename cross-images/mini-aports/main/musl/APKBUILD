# Contributor: Ariadne Conill <ariadne@dereferenced.org>
# Maintainer: Timo Ter√§s <timo.teras@iki.fi>
pkgname=musl
pkgver=1.2.3
pkgrel=3
pkgdesc="the musl c library (libc) implementation"
url="https://musl.libc.org/"
arch="all"
license="MIT"
options="lib64"
subpackages="
	$pkgname-dbg
	$pkgname-libintl:libintl:noarch
	$pkgname-dev
	libc6-compat:compat:noarch
	"
case "$BOOTSTRAP" in
nocc)	pkgname="musl-dev"; subpackages="";;
nolibc) ;;
*)	subpackages="$subpackages $pkgname-utils";;
esac
_commit="v1.2.3"
source="musl-$_commit.tar.gz::https://git.musl-libc.org/cgit/musl/snapshot/$_commit.tar.gz
	handle-aux-at_base.patch

	0001-fix-mishandling-of-errno-in-getaddrinfo-AI_ADDRCONFI.patch
	0001-fix-return-value-of-gethostby-name-2-addr-with-no-re.patch
	0001-fix-return-value-of-gethostnbyname-2-_r-on-result-no.patch
	0001-remove-impossible-error-case-from-gethostbyname2_r.patch

	relr-1.patch
	relr-2.patch
	relr-3.patch
	relr-4.patch

	ldconfig
	__stack_chk_fail_local.c
	getconf.c
	getent.c
	iconv.c
	"

# secfixes:
#   1.2.2_pre2-r0:
#     - CVE-2020-28928
#   1.1.23-r2:
#     - CVE-2019-14697
#   1.1.15-r4:
#     - CVE-2016-8859

builddir="$srcdir"/$_commit

build() {
	[ "$BOOTSTRAP" = "nocc" ] && return 0

	# provide minimal libssp_nonshared.a so we don't need libssp from gcc
	${CROSS_COMPILE}gcc $CPPFLAGS $CFLAGS -c "$srcdir"/__stack_chk_fail_local.c -o __stack_chk_fail_local.o
	${CROSS_COMPILE}ar r libssp_nonshared.a __stack_chk_fail_local.o

	if [ "$BOOTSTRAP" != "nolibc" ]; then
		# getconf/getent/iconv
		local i
		for i in getconf getent iconv ; do
			${CROSS_COMPILE}gcc $CPPFLAGS $CFLAGS "$srcdir"/$i.c -o $i
		done
	fi

	# note: not autotools
	LDFLAGS="$LDFLAGS -Wl,-soname,libc.musl-$CARCH.so.1" \
	./configure \
		--build=$CBUILD \
		--host=$CHOST \
		--prefix=/usr \
		--sysconfdir=/etc \
		--mandir=/usr/share/man \
		--infodir=/usr/share/info \
		--localstatedir=/var \
		--enable-debug \
		--disable-eh-frame
	make
}

package() {
	case "$CARCH" in
	aarch64*)	ARCH="aarch64" ;;
	arm*)		ARCH="arm" ;;
	x86)		ARCH="i386" ;;
	x86_64)		ARCH="x86_64" ;;
	ppc)		ARCH="powerpc" ;;
	ppc64*)		ARCH="powerpc64" ;;
	s390*)		ARCH="s390x" ;;
	mips64*)	ARCH="mips64" ;;
	mips*)		ARCH="mips" ;;
	riscv64)	ARCH="riscv64" ;;
	esac

	if [ "$BOOTSTRAP" = "nocc" ]; then
		make ARCH="$ARCH" prefix=/usr DESTDIR="$pkgdir" install-headers
	else
		make DESTDIR="$pkgdir" install

		cp libssp_nonshared.a "$pkgdir"/usr/lib

		# make LDSO the be the real file, and libc the symlink
		local LDSO=$(make -f Makefile --eval "$(echo -e 'print-ldso:\n\t@echo $$(basename $(LDSO_PATHNAME))')" print-ldso)
		mv -f "$pkgdir"/usr/lib/libc.so "$pkgdir"/lib/"$LDSO"
		ln -sf "$LDSO" "$pkgdir"/lib/libc.musl-$CARCH.so.1
		ln -sf ../../lib/"$LDSO" "$pkgdir"/usr/lib/libc.so
		mkdir -p "$pkgdir"/usr/bin

		cat >>"$pkgdir"/usr/bin/ldd <<-EOF
		#!/bin/sh
		exec /lib/$LDSO --list "\$@"
		EOF
		chmod 755 "$pkgdir"/usr/bin/ldd
	fi

}

utils() {
	depends="scanelf"
	replaces="libiconv"
	license="MIT BSD GPL2+"

	mkdir -p "$subpkgdir"/usr "$subpkgdir"/sbin
	mv "$pkgdir"/usr/bin "$subpkgdir"/usr/

	install -D \
		"$builddir"/getent \
		"$builddir"/getconf \
		"$builddir"/iconv \
		"$subpkgdir"/usr/bin

	install -D -m755 "$srcdir"/ldconfig "$subpkgdir"/sbin
}

# currently we don't want by default any NLS
# and use GNU gettext where needed. the plan is to migrate to
# musl gettext() later on as fully as possible.
libintl() {
	pkgdesc="musl libintl.h header"
	mkdir -p "$subpkgdir"/usr/include
	mv "$pkgdir"/usr/include/libintl.h \
		"$subpkgdir"/usr/include/
}

compat() {
	pkgdesc="compatibility libraries for glibc"

	mkdir -p "$subpkgdir"/lib
	# definitive source is https://sourceware.org/glibc/wiki/ABIList
	case "$CARCH" in
	aarch64)	_ld="lib/ld-linux-aarch64.so.1" ;;
	armel)		_ld="lib/ld-linux.so.3" ;;
	armhf)		_ld="lib/ld-linux-armhf.so.3" ;;
	armv7)		_ld="lib/ld-linux-armhf.so.3" ;;
	mips)		_ld="lib/ld.so.1" ;;
	mips64)		_ld="lib64/ld.so.1" ;;
	mipsel)		_ld="lib/ld.so.1" ;;
	mips64el)	_ld="lib64/ld.so.1" ;;
	ppc)		_ld="lib/ld.so.1" ;;
	ppc64)		_ld="lib64/ld64.so.1" ;;
	ppc64le)	_ld="lib64/ld64.so.2" ;;
	s390x)		_ld="lib/ld64.so.1" ;;
	x86)		_ld="lib/ld-linux.so.2" ;;
	x86_64)		_ld="lib64/ld-linux-x86-64.so.2";;
	esac
	mkdir -p "$subpkgdir/${_ld%/*}"
	ln -sf "/lib/libc.musl-$CARCH.so.1" "$subpkgdir/$_ld"

	for i in libc.so.6 libcrypt.so.1 libm.so.6 libpthread.so.0 librt.so.1 libutil.so.1; do
		ln -sf "/lib/libc.musl-$CARCH.so.1" "$subpkgdir/lib/$i"
	done
}

sha512sums="
9a1b8f9208d99582ac00e3c46c829aa1fad3b7f09aa7d6822f02f25542453d3d977c69519ad01430b8dd624ac9dc70f47d611e36aefd7fef31ea47a7679e3111  musl-v1.2.3.tar.gz
a76f79b801497ad994746cf82bb6eaf86f9e1ae646e6819fbae8532a7f4eee53a96ac1d4e789ec8f66aea2a68027b0597f7a579b3369e01258da8accfce41370  handle-aux-at_base.patch
63a7b65c2f508b0811f172d3b55da27a4b372653e01339d2f9e2b81bd61e7848ab317a6676a9440f50695658043cdede24881f8545f96bb291dd1f9b669ac08d  0001-fix-mishandling-of-errno-in-getaddrinfo-AI_ADDRCONFI.patch
b937a2c7f5adc51d23c731436b97152afbb147f98a4f33fa644fe2fe1aebea7da4519da4eb96acd73426660ce5dfe70cc27b8868e95a0322d74bc7aff4d8bddb  0001-fix-return-value-of-gethostby-name-2-addr-with-no-re.patch
c917d3b2667fa2485ca7ee568f73ef160957dc4652e7e95e7cdebdf521bed55e16c56da7b6afcce72bfd7b13b7282a36211e08061b4fc9ded0142791a7badd6e  0001-fix-return-value-of-gethostnbyname-2-_r-on-result-no.patch
2ed9de660b5e0f2b6aca195d7759c87ac85b515cb75bd73222b9d9dda00a6c5b07704ebd1507d2fbf925501c45f40cfb27244a05cad7a4da1f53f8f63ca4e5ae  0001-remove-impossible-error-case-from-gethostbyname2_r.patch
8ebcde1e07819de208ab89ed0a71fdcc67a5b1cecec5aa19a92bc9f4f3c2708a9ff1528370089de0b71e9ec3b2e08dfa49694db433ac190ba055aa112ae12bde  relr-1.patch
38b40ebedf57ba05ba14807a55a26261eeca8b6226a90a7aaebaaa31bae0bb7f5b98e0ce3ed727b704b828c9e509a21745f3e089585f8dea7092be164ec9d908  relr-2.patch
9dc41f682887ef9a7b00253f576d0b738936c20d9bc5a54fa96552a82a2f056f0111936ad9778b96745befd6a660276618b4e05bef3c7f52d8c2a9e6d41e386c  relr-3.patch
ee6ec5943df10597af0df3d6f792720a22d2070debb6933656a10a906725d1170c28c32ba8ad53efc72e77bd1d97efdbd3c80e91eddb856f377e917ff14ae8f3  relr-4.patch
8d3a2d5315fc56fee7da9abb8b89bb38c6046c33d154c10d168fb35bfde6b0cf9f13042a3bceee34daf091bc409d699223735dcf19f382eeee1f6be34154f26f  ldconfig
062bb49fa54839010acd4af113e20f7263dde1c8a2ca359b5fb2661ef9ed9d84a0f7c3bc10c25dcfa10bb3c5a4874588dff636ac43d5dbb3d748d75400756d0b  __stack_chk_fail_local.c
0d80f37b34a35e3d14b012257c50862dfeb9d2c81139ea2dfa101d981d093b009b9fa450ba27a708ac59377a48626971dfc58e20a3799084a65777a0c32cbc7d  getconf.c
7f5b9d934d82deb5f8b23e16169a5d9b99ccab3a4708df06a95d685e1b24a3a3e69b3dcf4942f2f66c12a3d4bf0c5827e2ee2e8c4d7b1997359fccc2ac212dee  getent.c
9d42d66fb1facce2b85dad919be5be819ee290bd26ca2db00982b2f8e055a0196290a008711cbe2b18ec9eee8d2270e3b3a4692c5a1b807013baa5c2b70a2bbf  iconv.c
"
